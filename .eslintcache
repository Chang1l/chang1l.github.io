[{"C:\\Users\\TOP\\Desktop\\public\\src\\App.js":"1","C:\\Users\\TOP\\Desktop\\public\\src\\pages\\ResultPage.js":"2","C:\\Users\\TOP\\Desktop\\public\\src\\pages\\QuizPage.js":"3","C:\\Users\\TOP\\Desktop\\public\\src\\pages\\contents\\questions.js":"4","C:\\Users\\TOP\\Desktop\\public\\src\\components\\ProgressBar.js":"5","C:\\Users\\TOP\\Desktop\\public\\src\\index.js":"6","C:\\Users\\TOP\\Desktop\\public\\src\\style\\theme.js":"7","C:\\Users\\TOP\\Desktop\\public\\src\\pages\\DeveloperPage.js":"8","C:\\Users\\TOP\\Desktop\\public\\src\\pages\\WarningPage.js":"9","C:\\Users\\TOP\\Desktop\\public\\src\\components\\SYBtnComponent.js":"10","C:\\Users\\TOP\\Desktop\\public\\src\\components\\BoxComponent.js":"11","C:\\Users\\TOP\\Desktop\\public\\src\\components\\Kakao.js":"12","C:\\Users\\TOP\\Desktop\\public\\src\\components\\StartButtonComponent.js":"13","C:\\Users\\TOP\\Desktop\\public\\src\\pages\\contents\\results.js":"14","C:\\Users\\TOP\\Desktop\\public\\src\\components\\ButtonComponent.js":"15"},{"size":864,"mtime":1634994360487,"results":"16","hashOfConfig":"17"},{"size":6954,"mtime":1634994361144,"results":"18","hashOfConfig":"17"},{"size":5581,"mtime":1634994361143,"results":"19","hashOfConfig":"17"},{"size":3715,"mtime":1634994361148,"results":"20","hashOfConfig":"17"},{"size":707,"mtime":1634994361137,"results":"21","hashOfConfig":"17"},{"size":553,"mtime":1634994361139,"results":"22","hashOfConfig":"17"},{"size":372,"mtime":1634994361554,"results":"23","hashOfConfig":"17"},{"size":2629,"mtime":1634994361141,"results":"24","hashOfConfig":"17"},{"size":1275,"mtime":1634994361145,"results":"25","hashOfConfig":"17"},{"size":1364,"mtime":1634994361138,"results":"26","hashOfConfig":"17"},{"size":2160,"mtime":1634994361135,"results":"27","hashOfConfig":"17"},{"size":1825,"mtime":1634994361136,"results":"28","hashOfConfig":"17"},{"size":932,"mtime":1634994361139,"results":"29","hashOfConfig":"17"},{"size":61985,"mtime":1634994361150,"results":"30","hashOfConfig":"17"},{"size":1275,"mtime":1634994361136,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2dj94m",{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\TOP\\Desktop\\public\\src\\App.js",[],"C:\\Users\\TOP\\Desktop\\public\\src\\pages\\ResultPage.js",["65","66","67","68","69","70"],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Parser from \"html-react-parser\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\n\r\nimport results from \"./contents/results\";\r\nimport WarningPage from \"./WarningPage\";\r\nimport ButtonComponent from \"../components/SYBtnComponent\";\r\nimport KakaoShareBtn from \"../components/Kakao\";\r\nimport LinkCopyBtn from \"../assets/btn/btn_link.svg\";\r\nimport back from \"../assets/common/bakc_gif.gif\"\r\nimport backpaper from \"../assets/common/backpaper2.png\"\r\nimport paper from \"../assets//common//paper.jpg\"\r\nimport questions from \"./contents/questions\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: auto;\r\n  background: url(${back});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-color: bisque;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Container = styled.div`\r\n  margin-top: 5.6rem;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst ResultSub = styled.div`\r\n  font-family: \"Spoqa-Han-Sans\";\r\n  font-size: 1.4rem;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nconst ResultTitle = styled.div`\r\n  font-family: \"Jalnan\";\r\n  font-size: 4.5rem;\r\n  text-align: center;\r\n  color: white;\r\n  margin-top: 1.9rem;\r\n  margin-bottom: 5.4rem;\r\n`;\r\n\r\nconst ResultImg = styled.img`\r\n  position: absolute;\r\n  width: 36.624rem;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: absolute;\r\n  font-family: \"Jalnan\";\r\n  font-size: 1.9rem;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  color: black;\r\n`;\r\n\r\nconst ResultSquare = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  margin: 2.2rem;\r\n  height: ${(props) => (props.isNormal < 150 ? \"50rem\" : \"22.9rem\")};\r\n  background: url(${backpaper});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  border-radius: 0.5rem;\r\n\r\n  ${ResultImg} {\r\n    justify-content: center;\r\n    bottom: ${(props) => (props.isNormal < 150 ? \"15rem\" : \"10rem\")};\r\n    \r\n  }\r\n\r\n  ${Content} {\r\n    width: 85%;\r\n    left: 50%;\r\n    word-break: keep-all;\r\n    ${(props) =>\r\n      props.isNormal < 150\r\n        ? `transform: translateX(-50%);\r\n        bottom : 240px;`\r\n        : `top: 50%;\r\n        transform: translate(-50%, -50%);`};\r\n    top:20%;\r\n  }\r\n`;\r\n\r\nconst NormalResult = styled.div`\r\n  display: ${(props) => (props.isNormal < 150 ? \"show\" : \"none\")};\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-family: \"Jalnan\";\r\n  font-size: 1.6rem;\r\n  text-align: center;\r\n  color: white;\r\n  margin-top: 4.1rem;\r\n`;\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-left: 2.2rem;\r\n  margin-right: 2.2rem;\r\n`;\r\n\r\nconst MatchElement = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst EmptyPlace = styled.div`\r\n  width: 2rem;\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n  font-family: \"Jalnan\";\r\n  font-size: 1.4rem;\r\n  text-align: center;\r\n  color: white;\r\n  margin-top: 3.4rem;\r\n  margin-bottom: 1.3rem;\r\n`;\r\n\r\nconst SmallSub = styled.div`\r\n  text-align: center;\r\n  font-family: \"Spoqa-Han-Sans\";\r\n  font-weight: 400;\r\n  font-size: 1.1rem;\r\n  color: black;\r\n`;\r\n\r\nconst SmallTitle = styled.div`\r\n  text-align: center;\r\n  font-family: \"Jalnan\";\r\n  font-weight: 400;\r\n  font-size: 1.8rem;\r\n  color: black;\r\n`;\r\n\r\nconst MatchImg = styled.img`\r\n  width: 15.8rem;\r\n`;\r\n\r\nconst MatchSqaure = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 22.9rem;\r\n  background-color: white;\r\n  border-radius: 0.5rem;\r\n  text-align: center;\r\n\r\n  ${SmallSub} {\r\n    margin-top: 1.4rem;\r\n  }\r\n\r\n  ${SmallTitle} {\r\n    margin-top: 1.3rem;\r\n  }\r\n\r\n  ${MatchImg} {\r\n    margin-top: 0.6rem;\r\n  }\r\n`;\r\n\r\nconst ShareSquare = styled.div`\r\n  width: 100%;\r\n  height: 17rem;\r\n  background: url(${paper});\r\n  background-color: puple;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  border-radius: 0.5rem;\r\n  margin-top: 1.7rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  outline: none;\r\n  background: none;\r\n  border: none;\r\n  margin-right: 1.6rem;\r\n  margin-top: 1.6rem;\r\n  margin-bottom: 1.6rem;\r\n`;\r\n\r\nconst DeveloperPageLink = styled.div`\r\n  color: \"#1F1F1F\";\r\n  text-align: center;\r\n  font-family: \"Spoqa-Han-Sans\";\r\n  font-weight: 400;\r\n  font-size: 1.2rem;\r\n  margin-top: 6.3rem;\r\n`;\r\n\r\nconst BtnToPage = styled(NavLink)`\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.dark};\r\n`;\r\n\r\nconst Img = styled.img``;\r\n\r\nfunction ResultPage({ match }) {\r\n  window.scrollTo(0, 0);\r\n\r\n  const link = window.location.href;\r\n  const finalType = match.params.finalType;\r\n\r\n  const alertMessage = () => {\r\n    alert(\"나의 수명이 담겼어요!\");\r\n  };\r\n\r\n  if (finalType <= 150 && finalType >= 0) {\r\n    return (\r\n      <Wrapper>\r\n        <Container>\r\n          <ResultSub>{Parser(results[finalType].title)}</ResultSub>\r\n          <ResultTitle>{results[finalType].name}</ResultTitle>\r\n          <ResultSquare isNormal={finalType}>\r\n            <ResultImg isNormal={finalType} src={results[finalType].img} />\r\n            <Content>\r\n              <p>{Parser(results[finalType].description)}</p>\r\n              <p>남은 시간 : {results[finalType].subdesc - 2021}년</p>\r\n              <p>자신의 수명이 마음에 들지 않는다면 생활습관을 개선해보세요!</p>\r\n              <p>노력여하에 따라 생사부에 적힌 수명이 바뀔 수 있습니다.</p>\r\n            </Content>\r\n            \r\n            \r\n          </ResultSquare>\r\n\r\n          <Title>👍 친구에게 결과 공유하기</Title>\r\n          <FlexLayout>\r\n            <ShareSquare>\r\n              <FlexLayout>\r\n                <KakaoShareBtn\r\n                  _sub={results[finalType].title}\r\n                  _title={results[finalType].name}\r\n                  _imageUrl={results[finalType].img}\r\n                  _finalType={finalType}\r\n                />\r\n                <CopyToClipboard text={link}>\r\n                  <Button onClick={alertMessage}>\r\n                    <Img src={LinkCopyBtn} />\r\n                  </Button>\r\n                </CopyToClipboard>\r\n              </FlexLayout>\r\n              <BtnToPage exact to=\"/public/\">\r\n                <ButtonComponent\r\n                  type={\"result-activated\"}\r\n                  text={\"테스트 다시 하기\"}\r\n                />\r\n              </BtnToPage>\r\n            </ShareSquare>\r\n          </FlexLayout>\r\n\r\n          <BtnToPage exact to=\"/public/makers\">\r\n            <DeveloperPageLink>\r\n              제작자들은 어떤 사람인지 궁금하다면? 클릭!\r\n            </DeveloperPageLink>\r\n          </BtnToPage>\r\n        </Container>\r\n      </Wrapper>\r\n    );\r\n  } else {\r\n    return <WarningPage />;\r\n  }\r\n}\r\n\r\nexport default ResultPage;\r\n",["71","72"],"C:\\Users\\TOP\\Desktop\\public\\src\\pages\\QuizPage.js",["73","74"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonComponent from \"../components/ButtonComponent\";\r\nimport contents from \"./contents/questions\";\r\nimport ProgressBar from \"../components/ProgressBar\";\r\nimport Parser from \"html-react-parser\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Reaper from \"../assets/common/reaper.png\";\r\nimport g3 from \"../assets/common/g3.png\";\r\nimport g1 from \"../assets/common/g1.gif\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: ${(props) => (props.isShow === true ? \"flex\" : \"none\")};\r\n  \r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-color: bisque;\r\n  width: 100%; \r\n  height: 100vh;\r\n  background-color: black;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  margin-bottom: 3rem;\r\n  text-align: center;\r\n  align-items: center;\r\n`;\r\nconst Title = styled.div`\r\n  font-family: \"Jalnan\";\r\n  font-size: 2.5rem;\r\n  text-align: center;\r\n  margin-top: 1.9rem;\r\n  margin-bottom: 8.4rem;\r\n`;\r\nconst Footer = styled.div`\r\n  font-family: \"Spoqa-Han-Sans\";\r\n  font-size: 1.4rem;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  margin-top: 8.9rem;\r\n  color: #a7a7a7;\r\n`;\r\n\r\nconst Msg = styled.div`\r\n  font-family: \"Spoqa-Han-Sans\";\r\n  font-size: 1.4rem;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  color: #a7a7a7;\r\n`;\r\nconst Text = styled.div`\r\n  font-family: \"Jalnan\";\r\n  font-size: 1.9rem;\r\n  font-weight: light;\r\n  margin: 0.5rem;\r\n  text-align: center;\r\n  color: white;\r\n  margin-top: 3.9rem;\r\n  margin-bottom: 8.4rem;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 1.2rem;\r\n`;\r\n\r\nfunction QuizPage({ isShow }) {\r\n  const [questionNum, setQuestionNum] = useState(0);\r\n  const [isProcess, setIsProcess] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [linkTo, setLinkTo] = useState(\"\");\r\n  const linkResult = \"/public/result/\";\r\n  const [typeOne, setTypeOne] = useState(0);\r\n  const [typeTwo, setTypeTwo] = useState(0);\r\n  const [typeThree, setTypeThree] = useState(0);\r\n  const [typeFour, setTypeFour] = useState(0);\r\n  const [finalType, setFinalType] = useState(0);\r\n  const [turn, setTurn] = useState(0);\r\n\r\n  const onConditionChange = (key) => {\r\n    let record =\r\n      contents[questionNum].weight * contents[questionNum].answers[key].score; //dhld\r\n    if (questionNum === 3 && key === 2) {\r\n      setIsLoading(true);\r\n      let num = 500;\r\n      setFinalType(num);\r\n      setLinkTo(linkResult + num);\r\n      setTimeout(function () {\r\n        setIsLoading(false);\r\n      }, 3000);\r\n    } else if (questionNum === 0 || questionNum === 1) {\r\n      setTypeOne(typeOne + record);\r\n    } else if (questionNum === 2 || questionNum === 3 || questionNum === 4) {\r\n      setTypeTwo(typeTwo + record);\r\n    } else if (questionNum === 5 || questionNum === 6 || questionNum === 7) {\r\n      setTypeThree(typeThree + record);\r\n    } else if (questionNum >= 8) {\r\n      setTypeFour(typeFour + record);\r\n      if (questionNum === 9) {\r\n        var result = typeOne + typeTwo + typeThree + typeFour -1\r\n                \r\n        /*\r\n        if (typeOne >= 5) {\r\n            result = result + 8;\r\n        }\r\n        if (typeTwo >= 5) {\r\n            result = result + 4;\r\n        }\r\n        if (typeThree >= 5) {\r\n            result = result + 2;\r\n        }\r\n        if (typeFour + record >= 5) {\r\n            result = result + 1;\r\n        }\r\n        else {\r\n            result = result + 0;\r\n        }\r\n        */\r\n        let num = result;\r\n        setFinalType(num);\r\n        setLinkTo(linkResult + num);\r\n\r\n        setIsLoading(true);\r\n        setTimeout(function () {\r\n          setIsLoading(false);\r\n          setIsProcess(true);\r\n        }, 2500);\r\n      }\r\n    }\r\n    setQuestionNum(questionNum + 1);\r\n    setTurn(turn + 1);\r\n  };\r\n\r\n  const onClickResultBtn = () => {\r\n    setIsProcess(false);\r\n    setQuestionNum(16);\r\n  };\r\n\r\n  if (questionNum === 10) {\r\n    return (\r\n      <>\r\n        <Wrapper isShow={isLoading}>\r\n          <Title>당신의 남은 수명</Title>\r\n          \r\n          <Msg> 당신의 남은 수명을 찾고 있어요</Msg>\r\n          \r\n          <Footer>\r\n            made by 염.대.전 &nbsp;\r\n            <Logo src={Reaper} />\r\n          </Footer>\r\n        </Wrapper>\r\n        <Wrapper isShow={isProcess}>\r\n          <Container>\r\n            <Text>테스트 완료! </Text>\r\n            <Link to={linkTo} style={{ textDecoration: \"none\" }}>\r\n              <ButtonComponent\r\n                type={\"result\"}\r\n                text=\"나의 수명 확인하기\"\r\n                onclick={onClickResultBtn}\r\n              ></ButtonComponent>\r\n            </Link>\r\n          </Container>\r\n        </Wrapper>\r\n      </>\r\n    );\r\n  } else if (finalType === 150) {\r\n    return (\r\n      <div>\r\n        <Redirect to={linkTo}></Redirect>\r\n      </div>\r\n    );\r\n  } else if (questionNum < 10 && finalType !== 150) {\r\n    return (\r\n      <>\r\n        <Wrapper isShow={isShow}>\r\n          <ProgressBar completed={(questionNum + 1) * 10} rotation={turn} />\r\n\r\n          <Container>\r\n            <Text>{Parser(contents[questionNum].question)} </Text>\r\n            {contents[questionNum].answers.map((answer, i) => (\r\n              <ButtonComponent\r\n                key={\"answer-\" + i}\r\n                idx={i}\r\n                text={Parser(answer.text)}\r\n                onclick={onConditionChange}\r\n              />\r\n            ))}\r\n          </Container>\r\n        </Wrapper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizPage;\r\n","C:\\Users\\TOP\\Desktop\\public\\src\\pages\\contents\\questions.js",[],"C:\\Users\\TOP\\Desktop\\public\\src\\components\\ProgressBar.js",[],"C:\\Users\\TOP\\Desktop\\public\\src\\index.js",[],"C:\\Users\\TOP\\Desktop\\public\\src\\style\\theme.js",[],"C:\\Users\\TOP\\Desktop\\public\\src\\pages\\DeveloperPage.js",[],"C:\\Users\\TOP\\Desktop\\public\\src\\pages\\WarningPage.js",[],"C:\\Users\\TOP\\Desktop\\public\\src\\components\\SYBtnComponent.js",[],"C:\\Users\\TOP\\Desktop\\public\\src\\components\\BoxComponent.js",[],"C:\\Users\\TOP\\Desktop\\public\\src\\components\\Kakao.js",[],"C:\\Users\\TOP\\Desktop\\public\\src\\components\\StartButtonComponent.js",[],"C:\\Users\\TOP\\Desktop\\public\\src\\pages\\contents\\results.js",["75","76","77","78","79","80","81"],"C:\\Users\\TOP\\Desktop\\public\\src\\components\\ButtonComponent.js",[],{"ruleId":"82","severity":1,"message":"83","line":15,"column":8,"nodeType":"84","messageId":"85","endLine":15,"endColumn":17},{"ruleId":"82","severity":1,"message":"86","line":96,"column":7,"nodeType":"84","messageId":"85","endLine":96,"endColumn":19},{"ruleId":"82","severity":1,"message":"87","line":115,"column":7,"nodeType":"84","messageId":"85","endLine":115,"endColumn":19},{"ruleId":"82","severity":1,"message":"88","line":123,"column":7,"nodeType":"84","messageId":"85","endLine":123,"endColumn":17},{"ruleId":"82","severity":1,"message":"89","line":127,"column":7,"nodeType":"84","messageId":"85","endLine":127,"endColumn":15},{"ruleId":"82","severity":1,"message":"90","line":156,"column":7,"nodeType":"84","messageId":"85","endLine":156,"endColumn":18},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"82","severity":1,"message":"95","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":10},{"ruleId":"82","severity":1,"message":"96","line":10,"column":8,"nodeType":"84","messageId":"85","endLine":10,"endColumn":10},{"ruleId":"82","severity":1,"message":"97","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":14},{"ruleId":"82","severity":1,"message":"98","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":11},{"ruleId":"82","severity":1,"message":"99","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":11},{"ruleId":"82","severity":1,"message":"100","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":11},{"ruleId":"82","severity":1,"message":"101","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":11},{"ruleId":"82","severity":1,"message":"102","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":12},{"ruleId":"82","severity":1,"message":"103","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":12},"no-unused-vars","'questions' is defined but never used.","Identifier","unusedVar","'NormalResult' is assigned a value but never used.","'MatchElement' is assigned a value but never used.","'EmptyPlace' is assigned a value but never used.","'SubTitle' is assigned a value but never used.","'MatchSqaure' is assigned a value but never used.","no-native-reassign",["104"],"no-negated-in-lhs",["105"],"'g3' is defined but never used.","'g1' is defined but never used.","'reaper' is defined but never used.","'p20' is defined but never used.","'p40' is defined but never used.","'p60' is defined but never used.","'p80' is defined but never used.","'p100' is defined but never used.","'p120' is defined but never used.","no-global-assign","no-unsafe-negation"]